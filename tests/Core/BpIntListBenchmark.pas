unit BpIntListBenchmark;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Classes, bpIntList, SysUtils, BpIntListInterface;

type
  // Test methods for class TBpIntList

  TbpIntListBenchmark = class(TTestCase)
  strict private
    FBpIntList: TBpIntList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAddPerformance;
  end;

implementation

uses
  Windows;

procedure TbpIntListBenchmark.SetUp;
begin
  FBpIntList := TBpIntList.Create;
end;

procedure TbpIntListBenchmark.TearDown;
begin
  FBpIntList.Free;
  FBpIntList := nil;
end;

procedure TbpIntListBenchmark.TestAddPerformance;
var
  lvIntList: TBpIntList;
  lvStrList: TStringList;
  lvStart, lvEnd: DWORD;
  lvDurationIntList, lvDurationStrList: DWORD;
  I: Integer;
const
  lcIntegersToAdd = 45000000; // 45 million. TStringList often OOMs with bigger number.
begin
  // Test TBpIntList
  lvIntList := TBpIntList.Create;
  try
    lvStart := GetTickCount;
    for I := 1 to lcIntegersToAdd do
      lvIntList.Add(I);
    lvEnd := GetTickCount;
    lvDurationIntList := lvEnd - lvStart;
  finally
    lvIntList.Free;
  end;

  // Test TStringList  
  lvStrList := TStringList.Create;
  try
    lvStart := GetTickCount;
    for I := 1 to lcIntegersToAdd do
      lvStrList.Add(IntToStr(I));
    lvEnd := GetTickCount;
    lvDurationStrList := lvEnd - lvStart;
  finally
    lvStrList.Free;
  end;

  // Output results
  Status(Format('Integers count: %d', [lcIntegersToAdd]));
  Status(Format('TBpIntList: %d ms', [lvDurationIntList]));
  Status(Format('TStringList: %d ms', [lvDurationStrList]));
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TbpIntListBenchmark.Suite);

end.

